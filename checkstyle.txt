Starting audit...
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/enums/FilterType.java:67:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/constants/StringConstants.java:12: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/constants/StringConstants.java:35: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/constants/StringConstants.java:41:92: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/constants/StringConstants.java:43:91: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/FiltersMapper.java:6:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/FiltersMapper.java:8:1: Class FiltersMapper should be declared as final. [FinalClass]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/FiltersMapper.java:9:29: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/FiltersMapper.java:9:30: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/FiltersMapper.java:19:58: Parameter filtersNode should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/FiltersMapper.java:30:17: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/SortByPlaylistLikes.java:17:24: Parameter o1 should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/SortByPlaylistLikes.java:17:37: Parameter o2 should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/DateMapper.java:10:1: Class DateMapper should be declared as final. [FinalClass]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/DateMapper.java:11:32: Name 'datePattern' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/DateMapper.java:12:29: Name 'februaryMAX' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/DateMapper.java:35:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/DateMapper.java:41:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/DateMapper.java:44:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/DateMapper.java:53:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/HelperTool.java:3:27: Using the '.*' form of import should be avoided - app.player.entities.*. [AvoidStarImport]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/HelperTool.java:6:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/HelperTool.java:8:1: Class HelperTool should be declared as final. [FinalClass]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/HelperTool.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/HelperTool.java:14:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/HelperTool.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/HelperTool.java:22:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/HelperTool.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/HelperTool.java:29:31: Parameter publicPlaylists should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/HelperTool.java:33:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/HelperTool.java:33:37: Parameter publicPlaylists should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/HelperTool.java:34: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/HelperTool.java:37:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/HelperTool.java:40:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/HelperTool.java:46:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/HelperTool.java:47:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/HelperTool.java:51:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/HelperTool.java:54:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/HelperTool.java:60:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/HelperTool.java:60:37: Parameter results should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/HelperTool.java:61:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/HelperTool.java:67:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/utilities/HelperTool.java:70:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/properties/Visitable.java:4:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/properties/OwnedEntity.java:4:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/properties/Visitor.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/properties/Visitor.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/properties/Visitor.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/properties/Visitor.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:3:21: Using the '.*' form of import should be avoided - app.utilities.*. [AvoidStarImport]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:4:27: Using the '.*' form of import should be avoided - app.player.entities.*. [AvoidStarImport]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:6:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:22:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:27:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:32:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:39:5: Class 'AdminBot' looks like designed for extension (can be subclassed), but the method 'getArtistByUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminBot' final or making the method 'getArtistByUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:39:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:41:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:48:5: Class 'AdminBot' looks like designed for extension (can be subclassed), but the method 'getHostByUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminBot' final or making the method 'getHostByUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:48:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:50:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:57:5: Class 'AdminBot' looks like designed for extension (can be subclassed), but the method 'getOnlineUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminBot' final or making the method 'getOnlineUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:57:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:61:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:68:5: Class 'AdminBot' looks like designed for extension (can be subclassed), but the method 'getAllUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminBot' final or making the method 'getAllUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:68:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:78:5: Class 'AdminBot' looks like designed for extension (can be subclassed), but the method 'getAllSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminBot' final or making the method 'getAllSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:78:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:96:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:101:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:106:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:121:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:135:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:141:5: Class 'AdminBot' looks like designed for extension (can be subclassed), but the method 'checkIfOwnerHasPlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminBot' final or making the method 'checkIfOwnerHasPlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:141:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:143:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:147:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:154:5: Class 'AdminBot' looks like designed for extension (can be subclassed), but the method 'getOwnerPlaylistById' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminBot' final or making the method 'getOwnerPlaylistById' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:154:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:157:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:163:5: Class 'AdminBot' looks like designed for extension (can be subclassed), but the method 'createPlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminBot' final or making the method 'createPlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:163:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:177:5: Class 'AdminBot' looks like designed for extension (can be subclassed), but the method 'getUserPublicPlaylists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminBot' final or making the method 'getUserPublicPlaylists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:177:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:181:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:188:5: Class 'AdminBot' looks like designed for extension (can be subclassed), but the method 'getAvailablePlaylists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminBot' final or making the method 'getAvailablePlaylists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:188:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:192:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:196:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:205:5: Class 'AdminBot' looks like designed for extension (can be subclassed), but the method 'getUserLikedSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminBot' final or making the method 'getUserLikedSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:205:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:219:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:231:5: Class 'AdminBot' looks like designed for extension (can be subclassed), but the method 'mapLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminBot' final or making the method 'mapLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:231:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:245:5: Class 'AdminBot' looks like designed for extension (can be subclassed), but the method 'getPublicPlaylists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminBot' final or making the method 'getPublicPlaylists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:245:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:251:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:259:5: Class 'AdminBot' looks like designed for extension (can be subclassed), but the method 'getAllAlbums' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminBot' final or making the method 'getAllAlbums' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:259:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:267:5: Class 'AdminBot' looks like designed for extension (can be subclassed), but the method 'getTopFiveSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminBot' final or making the method 'getTopFiveSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:267:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:280:5: Class 'AdminBot' looks like designed for extension (can be subclassed), but the method 'getTopFivePlaylists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminBot' final or making the method 'getTopFivePlaylists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:280:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:287:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:293:5: Class 'AdminBot' looks like designed for extension (can be subclassed), but the method 'getTopFiveAlbums' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminBot' final or making the method 'getTopFiveAlbums' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:293:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:304:5: Class 'AdminBot' looks like designed for extension (can be subclassed), but the method 'getTopFiveArtists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminBot' final or making the method 'getTopFiveArtists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:304:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:316:5: Class 'AdminBot' looks like designed for extension (can be subclassed), but the method 'getArtistAlbums' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminBot' final or making the method 'getArtistAlbums' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:316:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:322:5: Class 'AdminBot' looks like designed for extension (can be subclassed), but the method 'getHostPodcasts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminBot' final or making the method 'getHostPodcasts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:322:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:328:5: Class 'AdminBot' looks like designed for extension (can be subclassed), but the method 'addSongsToLibrary' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminBot' final or making the method 'addSongsToLibrary' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:328:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:335:5: Class 'AdminBot' looks like designed for extension (can be subclassed), but the method 'addPodcastToLibrary' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminBot' final or making the method 'addPodcastToLibrary' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:335:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:342:5: Class 'AdminBot' looks like designed for extension (can be subclassed), but the method 'playlistsHaveSongFromArtist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminBot' final or making the method 'playlistsHaveSongFromArtist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:342:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/AdminBot.java:344:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Admin.java:18:5: Class 'Admin' looks like designed for extension (can be subclassed), but the method 'createUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Admin' final or making the method 'createUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Admin.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Admin.java:28:5: Class 'Admin' looks like designed for extension (can be subclassed), but the method 'addUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Admin' final or making the method 'addUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Admin.java:28:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Admin.java:28:28: Parameter newUser should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Admin.java:29:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Admin.java:32:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Admin.java:35:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Admin.java:41:5: Class 'Admin' looks like designed for extension (can be subclassed), but the method 'removeUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Admin' final or making the method 'removeUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Admin.java:41:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Admin.java:41:28: Parameter oldUser should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Admin.java:45:5: Class 'Admin' looks like designed for extension (can be subclassed), but the method 'removeAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Admin' final or making the method 'removeAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Admin.java:45:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Admin.java:45:29: Parameter oldAlbum should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Admin.java:53:5: Class 'Admin' looks like designed for extension (can be subclassed), but the method 'removePodcast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Admin' final or making the method 'removePodcast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Admin.java:53:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Admin.java:53:31: Parameter oldPodcast should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Admin.java:59:5: Class 'Admin' looks like designed for extension (can be subclassed), but the method 'isNormalUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Admin' final or making the method 'isNormalUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:7:27: Using the '.*' form of import should be avoided - app.player.entities.*. [AvoidStarImport]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:31:19: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:31:20: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:33:17: Parameter input should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:51:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:55:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'isLikingSong' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'isLikingSong' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:55:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:55:33: Parameter song should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:59:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'like' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'like' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:59:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:59:22: Parameter song should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:63:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'unlike' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'unlike' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:63:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:63:24: Parameter song should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:67:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'isFollowing' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'isFollowing' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:67:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:67:32: Parameter playlist should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:71:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'follow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'follow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:71:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:71:24: Parameter playlist should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:75:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'unfollow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'unfollow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:75:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:75:26: Parameter playlist should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:79:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'isOnline' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'isOnline' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:83:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'isOffline' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'isOffline' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:87:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'bringOnline' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'bringOnline' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:87:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:91:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'sendOffline' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'sendOffline' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:91:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:96:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'switchStatus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'switchStatus' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:96:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:97:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:99:9: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:104:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'hasAlbumWithName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'hasAlbumWithName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:104:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:107:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getAlbums' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getAlbums' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:110:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getAlbumByName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getAlbumByName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:110:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:113:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'addAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'addAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:113:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:116:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:117:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getNumberOfLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getNumberOfLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:121:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'hasEvent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'hasEvent' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:121:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:124:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getEvent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getEvent' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:124:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:127:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:128:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'removeEvent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'removeEvent' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:128:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:132:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'hasMerch' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'hasMerch' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:132:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:135:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:137:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'hasPodcastWithName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'hasPodcastWithName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:137:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:140:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getPodcastByName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getPodcastByName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:140:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:143:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getPodcasts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getPodcasts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:146:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'addPodcast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'addPodcast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:146:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:149:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:151:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'hasAnnouncement' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'hasAnnouncement' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:151:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:154:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getAnnouncement' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getAnnouncement' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:154:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:157:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'addAnnouncement' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'addAnnouncement' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:157:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:160:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'removeAnnouncement' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'removeAnnouncement' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:160:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:164:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'isNormalUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'isNormalUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:167:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'isArtist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'isArtist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:170:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'isHost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'isHost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:174:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:174:5: Definition of 'hashCode()' without corresponding definition of 'equals()'. [EqualsHashCode]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:179:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:181:24: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:182:50: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:183:32: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/User.java:184:42: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:24:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'getPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'getPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:29:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'hasAlbumWithName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'hasAlbumWithName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:30:37: Parameter albumName should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:32:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:39:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'getAlbumByName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'getAlbumByName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:40:33: Parameter albumName should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:41:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:42:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:48:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'addAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'addAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:49:29: Parameter newAlbum should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:53:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'removeAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'removeAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:54:29: Parameter oldAlbum should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:58:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'getNumberOfLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'getNumberOfLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:61:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:67:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'hasEvent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'hasEvent' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:68:29: Parameter eventName should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:70:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:77:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'getEvent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'getEvent' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:78:27: Parameter eventName should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:80:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:87:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'addEvent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'addEvent' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:88:26: Parameter newEvent should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:92:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'removeEvent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'removeEvent' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:93:32: Parameter event should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:97:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'hasMerch' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'hasMerch' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:98:29: Parameter merchName should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:100:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:107:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'addMerch' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'addMerch' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:108:26: Parameter newMerch should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:112:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'isArtist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'isArtist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Artist.java:117:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'isNormalUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'isNormalUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:15:17: Parameter username should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:15:34: Parameter age should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:15:43: Parameter city should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:21:5: Class 'Host' looks like designed for extension (can be subclassed), but the method 'getPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Host' final or making the method 'getPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:26:5: Class 'Host' looks like designed for extension (can be subclassed), but the method 'hasPodcastWithName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Host' final or making the method 'hasPodcastWithName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:27:39: Parameter podcastName should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:29:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:36:5: Class 'Host' looks like designed for extension (can be subclassed), but the method 'getPodcastByName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Host' final or making the method 'getPodcastByName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:37:37: Parameter podcastName should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:39:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:46:5: Class 'Host' looks like designed for extension (can be subclassed), but the method 'getPodcasts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Host' final or making the method 'getPodcasts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:51:5: Class 'Host' looks like designed for extension (can be subclassed), but the method 'addPodcast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Host' final or making the method 'addPodcast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:52:31: Parameter newPodcast should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:56:5: Class 'Host' looks like designed for extension (can be subclassed), but the method 'removePodcast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Host' final or making the method 'removePodcast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:57:31: Parameter oldPodcast should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:61:5: Class 'Host' looks like designed for extension (can be subclassed), but the method 'hasAnnouncement' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Host' final or making the method 'hasAnnouncement' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:62:36: Parameter announceName should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:64:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:71:5: Class 'Host' looks like designed for extension (can be subclassed), but the method 'getAnnouncement' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Host' final or making the method 'getAnnouncement' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:72:41: Parameter announceName should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:74:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:81:5: Class 'Host' looks like designed for extension (can be subclassed), but the method 'addAnnouncement' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Host' final or making the method 'addAnnouncement' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:82:36: Parameter newAnnouncement should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:86:5: Class 'Host' looks like designed for extension (can be subclassed), but the method 'removeAnnouncement' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Host' final or making the method 'removeAnnouncement' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:87:39: Parameter oldAnnouncement should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:91:5: Class 'Host' looks like designed for extension (can be subclassed), but the method 'isNormalUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Host' final or making the method 'isNormalUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/users/Host.java:96:5: Class 'Host' looks like designed for extension (can be subclassed), but the method 'isHost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Host' final or making the method 'isHost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/AddMerchInterrogator.java:19:5: Class 'AddMerchInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddMerchInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/AddMerchInterrogator.java:25:5: Class 'AddMerchInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddMerchInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/AllUsersInterrogator.java:17:5: Class 'AllUsersInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AllUsersInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/AllUsersInterrogator.java:23:5: Class 'AllUsersInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AllUsersInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/RemovePodcastInterrogator.java:16:5: Class 'RemovePodcastInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RemovePodcastInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/RemovePodcastInterrogator.java:22:5: Class 'RemovePodcastInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RemovePodcastInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/ShowPodcastsInterrogator.java:15:5: Class 'ShowPodcastsInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShowPodcastsInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/ShowPodcastsInterrogator.java:21:5: Class 'ShowPodcastsInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShowPodcastsInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/AddUserInterrogator.java:19:5: Class 'AddUserInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddUserInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/AddUserInterrogator.java:25:5: Class 'AddUserInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddUserInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/OnlineUsersInterrogator.java:15:18: Variable 'results' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/OnlineUsersInterrogator.java:17:5: Class 'OnlineUsersInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OnlineUsersInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/OnlineUsersInterrogator.java:23:5: Class 'OnlineUsersInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OnlineUsersInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/RemoveAlbumInterrogator.java:16:5: Class 'RemoveAlbumInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RemoveAlbumInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/RemoveAlbumInterrogator.java:22:5: Class 'RemoveAlbumInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RemoveAlbumInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/TopFiveAlbumsInterrogator.java:17:5: Class 'TopFiveAlbumsInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TopFiveAlbumsInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/TopFiveAlbumsInterrogator.java:23:5: Class 'TopFiveAlbumsInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TopFiveAlbumsInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/ConnectionInterrogator.java:15:5: Class 'ConnectionInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConnectionInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/ConnectionInterrogator.java:21:5: Class 'ConnectionInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConnectionInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/AddPodcastInterrogator.java:22:5: Class 'AddPodcastInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddPodcastInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/AddPodcastInterrogator.java:28:5: Class 'AddPodcastInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddPodcastInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/RemoveEventInterrogator.java:16:5: Class 'RemoveEventInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RemoveEventInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/RemoveEventInterrogator.java:22:5: Class 'RemoveEventInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RemoveEventInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/ShowAlbumsInterrogator.java:17:5: Class 'ShowAlbumsInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShowAlbumsInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/ShowAlbumsInterrogator.java:23:5: Class 'ShowAlbumsInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShowAlbumsInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/ChangePageInterrogator.java:15:5: Class 'ChangePageInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangePageInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/ChangePageInterrogator.java:28:5: Class 'ChangePageInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangePageInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/AddAlbumInterrogator.java:26:5: Class 'AddAlbumInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddAlbumInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/AddAlbumInterrogator.java:32:5: Class 'AddAlbumInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddAlbumInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/PrintPageInterrogator.java:15:5: Class 'PrintPageInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PrintPageInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/PrintPageInterrogator.java:32:5: Class 'PrintPageInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PrintPageInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/DeleteUserInterrogator.java:14:5: Class 'DeleteUserInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeleteUserInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/DeleteUserInterrogator.java:20:5: Class 'DeleteUserInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeleteUserInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/TopFiveArtistsInterrogator.java:17:5: Class 'TopFiveArtistsInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TopFiveArtistsInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/TopFiveArtistsInterrogator.java:23:5: Class 'TopFiveArtistsInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TopFiveArtistsInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/AddEventInterrogator.java:20:5: Class 'AddEventInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddEventInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/AddEventInterrogator.java:26:5: Class 'AddEventInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddEventInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/RemoveAnnouncementInterrogator.java:16:5: Class 'RemoveAnnouncementInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RemoveAnnouncementInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/RemoveAnnouncementInterrogator.java:22:5: Class 'RemoveAnnouncementInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RemoveAnnouncementInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/AddAnnouncementInterrogator.java:17:5: Class 'AddAnnouncementInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddAnnouncementInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stagetwo/AddAnnouncementInterrogator.java:23:5: Class 'AddAnnouncementInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddAnnouncementInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/ShowPlaylistsInterrogator.java:18:5: Class 'ShowPlaylistsInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShowPlaylistsInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/ShowPlaylistsInterrogator.java:25:5: Class 'ShowPlaylistsInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShowPlaylistsInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/PrevInterrogator.java:34:5: Class 'PrevInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PrevInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/SearchInterrogator.java:22:5: Class 'SearchInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/SearchInterrogator.java:35:5: Class 'SearchInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/SearchInterrogator.java:49:5: Class 'SearchInterrogator' looks like designed for extension (can be subclassed), but the method 'setFiltersField' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchInterrogator' final or making the method 'setFiltersField' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/SearchInterrogator.java:50:33: Parameter mappedFilters should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/ForwardInterrogator.java:15:5: Class 'ForwardInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ForwardInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/ForwardInterrogator.java:27:5: Class 'ForwardInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ForwardInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/RepeatInterrogator.java:34:5: Class 'RepeatInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RepeatInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/TopFiveSongsInterrogator.java:17:5: Class 'TopFiveSongsInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TopFiveSongsInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/TopFiveSongsInterrogator.java:24:5: Class 'TopFiveSongsInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TopFiveSongsInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/FollowInterrogator.java:15:5: Class 'FollowInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FollowInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/FollowInterrogator.java:27:5: Class 'FollowInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FollowInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/CreatePlaylistInterrogator.java:16:5: Class 'CreatePlaylistInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CreatePlaylistInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/CreatePlaylistInterrogator.java:28:5: Class 'CreatePlaylistInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CreatePlaylistInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/VisibilityInterrogator.java:17:5: Class 'VisibilityInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'VisibilityInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/VisibilityInterrogator.java:29:5: Class 'VisibilityInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'VisibilityInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/TopFivePlaylistsInterrogator.java:17:5: Class 'TopFivePlaylistsInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TopFivePlaylistsInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/TopFivePlaylistsInterrogator.java:24:5: Class 'TopFivePlaylistsInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TopFivePlaylistsInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/LoadInterrogator.java:14:5: Class 'LoadInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LoadInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/LoadInterrogator.java:26:5: Class 'LoadInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LoadInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/ShuffleInterrogator.java:35:5: Class 'ShuffleInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShuffleInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/PlayPauseInterrogator.java:14:5: Class 'PlayPauseInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayPauseInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/PlayPauseInterrogator.java:26:5: Class 'PlayPauseInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayPauseInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/NextInterrogator.java:15:5: Class 'NextInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NextInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/NextInterrogator.java:27:5: Class 'NextInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NextInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/StatusInterrogator.java:15:5: Class 'StatusInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StatusInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/StatusInterrogator.java:22:5: Class 'StatusInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StatusInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/AddRemoveInterrogator.java:16:5: Class 'AddRemoveInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddRemoveInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/AddRemoveInterrogator.java:28:5: Class 'AddRemoveInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddRemoveInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/ShowLikesInterrogator.java:16:5: Class 'ShowLikesInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShowLikesInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/ShowLikesInterrogator.java:23:5: Class 'ShowLikesInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShowLikesInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/SelectInterrogator.java:21:5: Class 'SelectInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SelectInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/SelectInterrogator.java:33:5: Class 'SelectInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SelectInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/LikeInterrogator.java:15:5: Class 'LikeInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LikeInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/LikeInterrogator.java:28:5: Class 'LikeInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LikeInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/BackwardInterrogator.java:15:5: Class 'BackwardInterrogator' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BackwardInterrogator' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/commands/stageone/BackwardInterrogator.java:27:5: Class 'BackwardInterrogator' looks like designed for extension (can be subclassed), but the method 'formatOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BackwardInterrogator' final or making the method 'formatOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/Page.java:9:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'getArtistName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'getArtistName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/Page.java:12:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'getHostName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'getHostName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/Page.java:15:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/HomePage.java:18:21: Parameter user should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/HomePage.java:23:5: Class 'HomePage' looks like designed for extension (can be subclassed), but the method 'getRecommendedSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HomePage' final or making the method 'getRecommendedSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/HomePage.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/HomePage.java:35:5: Class 'HomePage' looks like designed for extension (can be subclassed), but the method 'getRecommendedPlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HomePage' final or making the method 'getRecommendedPlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/HomePage.java:35:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/HomePage.java:45:5: Class 'HomePage' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HomePage' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/HomePage.java:46:26: Parameter v should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/features/Announcement.java:17:5: Class 'Announcement' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Announcement' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/features/Announcement.java:18:27: Parameter o should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/features/Announcement.java:19:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/features/Announcement.java:20:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/features/Announcement.java:22:52: '&&' should be on a new line. [OperatorWrap]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/features/Announcement.java:26:5: Class 'Announcement' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Announcement' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/features/Event.java:20:5: Class 'Event' looks like designed for extension (can be subclassed), but the method 'getFormattedDate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Event' final or making the method 'getFormattedDate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ArtistPage.java:5:27: Using the '.*' form of import should be avoided - app.player.entities.*. [AvoidStarImport]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ArtistPage.java:25:5: Class 'ArtistPage' looks like designed for extension (can be subclassed), but the method 'getAlbums' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ArtistPage' final or making the method 'getAlbums' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ArtistPage.java:29:5: Class 'ArtistPage' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ArtistPage' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ArtistPage.java:30:26: Parameter v should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ArtistPage.java:34:5: Class 'ArtistPage' looks like designed for extension (can be subclassed), but the method 'getArtistName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ArtistPage' final or making the method 'getArtistName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ArtistPage.java:39:5: Class 'ArtistPage' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ArtistPage' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ContentVisitor.java:6:27: Using the '.*' form of import should be avoided - app.player.entities.*. [AvoidStarImport]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ContentVisitor.java:12:5: Class 'ContentVisitor' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ContentVisitor' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ContentVisitor.java:13:25: Parameter page should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ContentVisitor.java:19:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ContentVisitor.java:27:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ContentVisitor.java:37:5: Class 'ContentVisitor' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ContentVisitor' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ContentVisitor.java:38:25: Parameter page should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ContentVisitor.java:45:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ContentVisitor.java:53:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ContentVisitor.java:63:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ContentVisitor.java:75:5: Class 'ContentVisitor' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ContentVisitor' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ContentVisitor.java:76:25: Parameter page should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ContentVisitor.java:82:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ContentVisitor.java:89:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ContentVisitor.java:102:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ContentVisitor.java:115:5: Class 'ContentVisitor' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ContentVisitor' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ContentVisitor.java:116:25: Parameter page should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ContentVisitor.java:122:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/ContentVisitor.java:132:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/LikedContentPage.java:3:27: Using the '.*' form of import should be avoided - app.player.entities.*. [AvoidStarImport]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/LikedContentPage.java:20:5: Class 'LikedContentPage' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LikedContentPage' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/LikedContentPage.java:21:26: Parameter v should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/HostPage.java:12:35: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/HostPage.java:16:21: Parameter host should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/HostPage.java:21:5: Class 'HostPage' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HostPage' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/HostPage.java:22:26: Parameter v should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/HostPage.java:26:5: Class 'HostPage' looks like designed for extension (can be subclassed), but the method 'getHostName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HostPage' final or making the method 'getHostName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/pages/HostPage.java:31:5: Class 'HostPage' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HostPage' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/PodcastStats.java:19:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/RemovePodcastOutput.java:19:5: Class 'RemovePodcastOutput' looks like designed for extension (can be subclassed), but the method 'generateMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RemovePodcastOutput' final or making the method 'generateMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/RemovePodcastOutput.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/AddAnnouncementOutput.java:20:5: Class 'AddAnnouncementOutput' looks like designed for extension (can be subclassed), but the method 'generateMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddAnnouncementOutput' final or making the method 'generateMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/AddAnnouncementOutput.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/AddPodcastOutput.java:20:5: Class 'AddPodcastOutput' looks like designed for extension (can be subclassed), but the method 'generateMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddPodcastOutput' final or making the method 'generateMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/AddPodcastOutput.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/PrintPageOutput.java:4:8: Unused import - app.utilities.constants.StringConstants. [UnusedImports]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/PrintPageOutput.java:19:5: Class 'PrintPageOutput' looks like designed for extension (can be subclassed), but the method 'generateMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PrintPageOutput' final or making the method 'generateMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/PrintPageOutput.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/PrintPageOutput.java:23:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/AddUserOutput.java:19:5: Class 'AddUserOutput' looks like designed for extension (can be subclassed), but the method 'generateMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddUserOutput' final or making the method 'generateMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/AddUserOutput.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/AddUserOutput.java:19:58: Parameter atExit should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/ShowPodcastsOutput.java:21:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/AlbumStats.java:19:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/AddAlbumOutput.java:13:27: Parameter executedQuery should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/AddAlbumOutput.java:20:5: Class 'AddAlbumOutput' looks like designed for extension (can be subclassed), but the method 'generateMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddAlbumOutput' final or making the method 'generateMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/AddAlbumOutput.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/SwitchConnectionOutput.java:18:5: Class 'SwitchConnectionOutput' looks like designed for extension (can be subclassed), but the method 'generateMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SwitchConnectionOutput' final or making the method 'generateMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/SwitchConnectionOutput.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/SwitchConnectionOutput.java:18:58: Parameter exitStatus should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/AddEventOutput.java:19:5: Class 'AddEventOutput' looks like designed for extension (can be subclassed), but the method 'generateMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddEventOutput' final or making the method 'generateMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/AddEventOutput.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/ShowAlbumsOutput.java:21:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/RemoveAlbumOutput.java:19:5: Class 'RemoveAlbumOutput' looks like designed for extension (can be subclassed), but the method 'generateMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RemoveAlbumOutput' final or making the method 'generateMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/RemoveAlbumOutput.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/RemoveAnnouncementOutput.java:19: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/RemoveAnnouncementOutput.java:19:5: Class 'RemoveAnnouncementOutput' looks like designed for extension (can be subclassed), but the method 'generateMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RemoveAnnouncementOutput' final or making the method 'generateMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/RemoveAnnouncementOutput.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/AddMerchOutput.java:19:5: Class 'AddMerchOutput' looks like designed for extension (can be subclassed), but the method 'generateMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddMerchOutput' final or making the method 'generateMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/AddMerchOutput.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/ChangePageOutput.java:19:5: Class 'ChangePageOutput' looks like designed for extension (can be subclassed), but the method 'selectMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangePageOutput' final or making the method 'selectMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/ChangePageOutput.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/ChangePageOutput.java:20:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/RemoveEventOutput.java:19:5: Class 'RemoveEventOutput' looks like designed for extension (can be subclassed), but the method 'generateMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RemoveEventOutput' final or making the method 'generateMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stagetwo/RemoveEventOutput.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/AddRemoveOutput.java:20:5: Class 'AddRemoveOutput' looks like designed for extension (can be subclassed), but the method 'generateMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddRemoveOutput' final or making the method 'generateMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/AddRemoveOutput.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/SearchOutput.java:24:5: Class 'SearchOutput' looks like designed for extension (can be subclassed), but the method 'generateMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchOutput' final or making the method 'generateMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/SearchOutput.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/SearchOutput.java:25:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/LikeOutput.java:13:23: Parameter executedQuery should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/LikeOutput.java:20:5: Class 'LikeOutput' looks like designed for extension (can be subclassed), but the method 'generateMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LikeOutput' final or making the method 'generateMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/LikeOutput.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/CreatePlaylistOutput.java:20:5: Class 'CreatePlaylistOutput' looks like designed for extension (can be subclassed), but the method 'generateMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CreatePlaylistOutput' final or making the method 'generateMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/CreatePlaylistOutput.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/SelectOutput.java:15:25: Parameter executedSelect should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/SelectOutput.java:22:5: Class 'SelectOutput' looks like designed for extension (can be subclassed), but the method 'generateMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SelectOutput' final or making the method 'generateMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/SelectOutput.java:22:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/PlayerStats.java:14:24: Parameter userPlayer should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/FollowOutput.java:20:5: Class 'FollowOutput' looks like designed for extension (can be subclassed), but the method 'getExitMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FollowOutput' final or making the method 'getExitMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/FollowOutput.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/ShowLikesOutput.java:13:28: Parameter executedQuery should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/SwitchVisibilityOutput.java:13:35: Parameter executedQuery should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/SwitchVisibilityOutput.java:20:5: Class 'SwitchVisibilityOutput' looks like designed for extension (can be subclassed), but the method 'generateMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SwitchVisibilityOutput' final or making the method 'generateMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/SwitchVisibilityOutput.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/ForwardBackwardOutput.java:12:34: Parameter executedQuery should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/ForwardBackwardOutput.java:19:34: Parameter executedQuery should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/LoadOutput.java:20:5: Class 'LoadOutput' looks like designed for extension (can be subclassed), but the method 'generateMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LoadOutput' final or making the method 'generateMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/LoadOutput.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/PlayPauseOutput.java:20:5: Class 'PlayPauseOutput' looks like designed for extension (can be subclassed), but the method 'generateMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayPauseOutput' final or making the method 'generateMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/PlayPauseOutput.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/ShuffleOutput.java:20:5: Class 'ShuffleOutput' looks like designed for extension (can be subclassed), but the method 'generateMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShuffleOutput' final or making the method 'generateMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/outputs/stageone/ShuffleOutput.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:7:8: Unused import - app.exitstats.stageone.ShuffleExit. [UnusedImports]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:59:17: Parameter input should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:82:17: Parameter songToBeCopied should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:87:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:98:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'getIndexOfFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'getIndexOfFile' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:99:31: Parameter file should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:103:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'getAudioFileAtIndex' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'getAudioFileAtIndex' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:104:42: Parameter index should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:105:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:111:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'getSize' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'getSize' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:116:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'getFollowers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'getFollowers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:120:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'addLike' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'addLike' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:120:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:124:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'removeLike' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'removeLike' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:124:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:128:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'increasePlaylistsCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'increasePlaylistsCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:128:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:132:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'decreasePlaylistsCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'decreasePlaylistsCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:132:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:136:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'isSong' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'isSong' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:141:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'isEmptyPlayableFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'isEmptyPlayableFile' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:146:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'getFirstAudioFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'getFirstAudioFile' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:151:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'needsHistoryTrack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'needsHistoryTrack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:156:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'getRepeatStateName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'getRepeatStateName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:157:38: Parameter repeatValue should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:158:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:173:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'cantGoForwardOrBackward' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'cantGoForwardOrBackward' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:178:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'getCurrentPlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'getCurrentPlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:183:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'getPublicIdentity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'getPublicIdentity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:188:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'getCurrentSong' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'getCurrentSong' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:193:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'getCurrentEpisode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'getCurrentEpisode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:198:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'hasAudiofileFromUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'hasAudiofileFromUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:199:41: Parameter username should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:203:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'getCurrentAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'getCurrentAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:208:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'isPlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'isPlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:213:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:218:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:219:27: Parameter o should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:220:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:221:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:226:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:231:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'compareTo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'compareTo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Song.java:232:26: Parameter o should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Album.java:27:28: '{' at column 28 should have line break after. [LeftCurly]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Album.java:27:28: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Album.java:27:51: ';' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Album.java:27:52: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Album.java:30:5: Class 'Album' looks like designed for extension (can be subclassed), but the method 'isUsedInPlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Album' final or making the method 'isUsedInPlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Album.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Album.java:32:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Album.java:39:5: Class 'Album' looks like designed for extension (can be subclassed), but the method 'getPublicIdentity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Album' final or making the method 'getPublicIdentity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Album.java:44:5: Class 'Album' looks like designed for extension (can be subclassed), but the method 'hasAudiofileFromUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Album' final or making the method 'hasAudiofileFromUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Album.java:45:41: Parameter username should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Album.java:49:5: Class 'Album' looks like designed for extension (can be subclassed), but the method 'getCurrentAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Album' final or making the method 'getCurrentAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Album.java:54:5: Class 'Album' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Album' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Album.java:54:5: Definition of 'equals()' without corresponding definition of 'hashCode()'. [EqualsHashCode]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Album.java:55:27: Parameter o should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Album.java:56:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Album.java:57:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:38:5: Class 'SearchBar' looks like designed for extension (can be subclassed), but the method 'chooseEngine' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchBar' final or making the method 'chooseEngine' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:38:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:50:5: Class 'SearchBar' looks like designed for extension (can be subclassed), but the method 'choosePager' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchBar' final or making the method 'choosePager' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:50:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:60:5: Class 'SearchBar' looks like designed for extension (can be subclassed), but the method 'search' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchBar' final or making the method 'search' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:60:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:78:5: Class 'SearchBar' looks like designed for extension (can be subclassed), but the method 'getPagesAsNames' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchBar' final or making the method 'getPagesAsNames' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:78:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:79:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:88:5: Class 'SearchBar' looks like designed for extension (can be subclassed), but the method 'getResultsAsNames' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchBar' final or making the method 'getResultsAsNames' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:88:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:89:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:98:5: Class 'SearchBar' looks like designed for extension (can be subclassed), but the method 'hasSearchedPages' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchBar' final or making the method 'hasSearchedPages' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:98:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:102:5: Class 'SearchBar' looks like designed for extension (can be subclassed), but the method 'hasSearchedPlayableEntities' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchBar' final or making the method 'hasSearchedPlayableEntities' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:102:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:106:5: Class 'SearchBar' looks like designed for extension (can be subclassed), but the method 'hasNoSearchResult' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchBar' final or making the method 'hasNoSearchResult' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:106:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:113:5: Class 'SearchBar' looks like designed for extension (can be subclassed), but the method 'invalidItem' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchBar' final or making the method 'invalidItem' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:113:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:113:32: Parameter index should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:120:5: Class 'SearchBar' looks like designed for extension (can be subclassed), but the method 'resetResults' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchBar' final or making the method 'resetResults' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:120:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:124:5: Class 'SearchBar' looks like designed for extension (can be subclassed), but the method 'wasNotInvoked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchBar' final or making the method 'wasNotInvoked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:124:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:125:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:134:5: Class 'SearchBar' looks like designed for extension (can be subclassed), but the method 'getResultAtIndex' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchBar' final or making the method 'getResultAtIndex' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:134:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:134:44: Parameter index should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:138:5: Class 'SearchBar' looks like designed for extension (can be subclassed), but the method 'getPageAtIndex' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchBar' final or making the method 'getPageAtIndex' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:138:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/SearchBar.java:138:32: Parameter index should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:9:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:19:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:82:33: '3' is a magic number. [MagicNumber]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:85:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'shuffle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'shuffle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:85:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:86:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:97:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'unshuffle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'unshuffle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:97:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:98:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:125:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:142:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:165:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:184:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:198:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:205:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'playNext' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'playNext' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:205:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:220:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'playPrev' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'playPrev' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:220:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:252:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'skip' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'skip' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:252:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:271:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'rewound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'rewound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:271:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:272:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:274:9: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:283:35: Parameter entity should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:284:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:293:36: Parameter entity should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:302:36: Parameter entity should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:304:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:333:24: Parameter selectedEntity should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:343:22: Parameter entity should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:346:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:367:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getDefaultOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getDefaultOrder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:367:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:442:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'updatePlayer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'updatePlayer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:442:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:443:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:443:74: '||' should be on a new line. [OperatorWrap]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:444:48: ')' is preceded with whitespace. [ParenPad]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:457:39: Parameter album should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:459:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:464:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:465:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:470:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Player.java:475:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:3:8: Unused import - app.exitstats.stageone.ShuffleExit. [UnusedImports]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:10:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:23:21: Parameter owner should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:23:35: Parameter name should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:23:48: Parameter creationTime should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:33:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getIndexOfFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getIndexOfFile' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:34:31: Parameter file should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:38:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getAudioFileAtIndex' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getAudioFileAtIndex' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:39:42: Parameter index should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:40:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:46:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getSize' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getSize' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:51:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getTotalLikesNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getTotalLikesNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:51:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:53:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:59:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'isPublic' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'isPublic' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:63:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'makePrivate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'makePrivate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:63:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:67:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'makePublic' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'makePublic' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:67:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:71:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'hasSong' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'hasSong' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:71:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:71:28: Parameter song should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:73:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:80:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'addSong' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'addSong' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:80:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:80:25: Parameter newSong should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:84:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'removeSong' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'removeSong' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:84:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:84:28: Parameter alreadyInListSong should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:89:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getNumericalOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getNumericalOrder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:89:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:91:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:97:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'isFollowedByUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'isFollowedByUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:97:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:97:37: Parameter user should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:99:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:106:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'isOwnedByUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'isOwnedByUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:106:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:106:34: Parameter user should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:110:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getFollowedBy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getFollowedBy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:110:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:110:31: Parameter user should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:115:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getUnfollowedBy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getUnfollowedBy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:115:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:115:33: Parameter user should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:120:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'hasSongFromAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'hasSongFromAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:120:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:121:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:122:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:128:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getRepeatStateName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getRepeatStateName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:129:38: Parameter repeatValue should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:130:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:145:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'isEmptyPlayableFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'isEmptyPlayableFile' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:150:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getFirstAudioFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getFirstAudioFile' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:152:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:158:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:160:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:166:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getCurrentPlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getCurrentPlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:171:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'needsHistoryTrack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'needsHistoryTrack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:176:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'cantGoForwardOrBackward' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'cantGoForwardOrBackward' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:181:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getPublicIdentity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getPublicIdentity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:186:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'hasAudiofileFromUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'hasAudiofileFromUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:187:41: Parameter username should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:189:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:196:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getCurrentAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getCurrentAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Playlist.java:201:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'isPlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'isPlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Episode.java:24:20: Parameter input should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Episode.java:39:5: Class 'Episode' looks like designed for extension (can be subclassed), but the method 'getCurrentSong' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Episode' final or making the method 'getCurrentSong' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Episode.java:44:5: Class 'Episode' looks like designed for extension (can be subclassed), but the method 'getCurrentEpisode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Episode' final or making the method 'getCurrentEpisode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Episode.java:49:5: Class 'Episode' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Episode' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Episode.java:50:27: Parameter o should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Episode.java:51:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Episode.java:52:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Episode.java:57:5: Class 'Episode' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Episode' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:5:8: Unused import - app.exitstats.stageone.ShuffleExit. [UnusedImports]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:40:5: Class 'Podcast' looks like designed for extension (can be subclassed), but the method 'getIndexOfFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Podcast' final or making the method 'getIndexOfFile' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:41:31: Parameter file should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:45:5: Class 'Podcast' looks like designed for extension (can be subclassed), but the method 'getAudioFileAtIndex' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Podcast' final or making the method 'getAudioFileAtIndex' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:46:42: Parameter index should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:47:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:53:5: Class 'Podcast' looks like designed for extension (can be subclassed), but the method 'getSize' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Podcast' final or making the method 'getSize' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:66:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:80:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:109:5: Class 'Podcast' looks like designed for extension (can be subclassed), but the method 'isEmptyPlayableFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Podcast' final or making the method 'isEmptyPlayableFile' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:114:5: Class 'Podcast' looks like designed for extension (can be subclassed), but the method 'getFirstAudioFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Podcast' final or making the method 'getFirstAudioFile' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:119:5: Class 'Podcast' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Podcast' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:124:5: Class 'Podcast' looks like designed for extension (can be subclassed), but the method 'needsHistoryTrack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Podcast' final or making the method 'needsHistoryTrack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:129:5: Class 'Podcast' looks like designed for extension (can be subclassed), but the method 'cantGoForwardOrBackward' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Podcast' final or making the method 'cantGoForwardOrBackward' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:134:5: Class 'Podcast' looks like designed for extension (can be subclassed), but the method 'getCurrentPlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Podcast' final or making the method 'getCurrentPlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:139:5: Class 'Podcast' looks like designed for extension (can be subclassed), but the method 'getPublicIdentity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Podcast' final or making the method 'getPublicIdentity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:144:5: Class 'Podcast' looks like designed for extension (can be subclassed), but the method 'hasAudiofileFromUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Podcast' final or making the method 'hasAudiofileFromUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:145:41: Parameter username should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:149:5: Class 'Podcast' looks like designed for extension (can be subclassed), but the method 'getCurrentAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Podcast' final or making the method 'getCurrentAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:154:5: Class 'Podcast' looks like designed for extension (can be subclassed), but the method 'getCreationTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Podcast' final or making the method 'getCreationTime' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:159:5: Class 'Podcast' looks like designed for extension (can be subclassed), but the method 'isPlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Podcast' final or making the method 'isPlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:164:5: Class 'Podcast' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Podcast' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:165:27: Parameter o should be final. [FinalParameters]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:166:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:167:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/Podcast.java:172:5: Class 'Podcast' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Podcast' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/AudioFile.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/app/player/entities/AudioFile.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/cristian-andreitudor/oop-project-2023-main/etapa2/./src/main/Test.java:8:8: Unused import - java.util.Scanner. [UnusedImports]
Audit done.
Checkstyle ends with 708 errors.
